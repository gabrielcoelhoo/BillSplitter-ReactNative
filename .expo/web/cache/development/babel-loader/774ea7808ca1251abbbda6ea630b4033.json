{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nvar Report = function Report(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reportOfPurchases = _useState2[0],\n      setreportOfPurchases = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      answerResponse = _useState4[0],\n      setAnswerResponse = _useState4[1];\n\n  function reportOfPurchasesAPI() {\n    mode: 'no-cors', fetch(\"http://localhost:8080/expenses/reportOfPurchases\", {\n      method: 'GET',\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      setreportOfPurchases(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  function closeTripAPI() {\n    mode: 'no-cors', fetch(\"http://localhost:8080/expenses/closeTrip\", {\n      method: 'GET',\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    }).then(function (responseJson) {\n      console.log(responseJson);\n\n      if (responseJson.status == 200) {\n        setAnswerResponse(\"trip closed successfully\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  function openTripAPI() {\n    mode: 'no-cors', fetch(\"http://localhost:8080/expenses/openTrip\", {\n      method: 'GET',\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    }).then(function (responseJson) {\n      console.log(responseJson);\n\n      if (responseJson.status == 200) {\n        setAnswerResponse(\"trip opened successfully\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  return React.createElement(View, {\n    style: StyleSheet.container\n  }, React.createElement(Text, null, \" name of people and respectively values to be paid or pay\"), React.createElement(View, {\n    style: StyleSheet.container\n  }, reportOfPurchases.map(function (index, report) {\n    return React.createElement(Text, {\n      key: report\n    }, index);\n  })), React.createElement(Button, {\n    title: \"final report \",\n    onPress: reportOfPurchasesAPI\n  }), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: closeTripAPI\n  }, React.createElement(Text, {\n    style: styles.textPressable\n  }, \"Close Trip\")), React.createElement(Button, {\n    title: \"Open trip \",\n    onPress: openTripAPI\n  }), React.createElement(Text, null, answerResponse));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'fff',\n    justifyContent: 'center'\n  },\n  text: {\n    borderColor: \"blue\",\n    borderWidth: 3,\n    height: 40,\n    margin: 10\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  },\n  textPressable: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  }\n});\nexport default Report;","map":{"version":3,"sources":["C:/Users/Gabriel/Desktop/splitBillApp/screens/Report.js"],"names":["React","useState","NavigationContainer","createNativeStackNavigator","Report","navigation","reportOfPurchases","setreportOfPurchases","answerResponse","setAnswerResponse","reportOfPurchasesAPI","mode","fetch","method","headers","token","then","response","json","responseJson","console","log","catch","error","closeTripAPI","status","openTripAPI","StyleSheet","container","map","index","report","styles","button","textPressable","create","flex","backgroundColor","justifyContent","text","borderColor","borderWidth","height","margin","alignItems","paddingVertical","paddingHorizontal","borderRadius","elevation","fontSize","lineHeight","fontWeight","letterSpacing","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, ScrollView, Text, View, StyleSheet, TextInput, Button, Alert, Pressable } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nconst Report = ({ navigation }) => {\r\n\r\n  const [reportOfPurchases, setreportOfPurchases] = useState([]);\r\n  const [answerResponse, setAnswerResponse] = useState(\"\");\r\n\r\n\r\n  function reportOfPurchasesAPI() {\r\n    mode: 'no-cors',\r\n    fetch(`http://localhost:8080/expenses/reportOfPurchases`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n        setreportOfPurchases(responseJson);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  function closeTripAPI() {\r\n    mode: 'no-cors',\r\n      fetch(`http://localhost:8080/expenses/closeTrip`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n\r\n      })\r\n        .then((responseJson) => {\r\n          console.log(responseJson);\r\n          if (responseJson.status == 200) {\r\n            setAnswerResponse(\"trip closed successfully\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n  }\r\n\r\n  function openTripAPI() {\r\n    mode: 'no-cors',\r\n      fetch(`http://localhost:8080/expenses/openTrip`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n\r\n      })\r\n        .then((responseJson) => {\r\n          console.log(responseJson);\r\n          if (responseJson.status == 200) {\r\n            setAnswerResponse(\"trip opened successfully\")\r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n  }\r\n\r\n  return (\r\n    <View style={StyleSheet.container}>\r\n\r\n      <Text> name of people and respectively values to be paid or pay</Text>\r\n\r\n      <View style={StyleSheet.container}>\r\n        {reportOfPurchases.map((index, report) => <Text key={report}>{index}</Text>)}\r\n      </View>\r\n\r\n      <Button\r\n        title=\"final report \"\r\n        onPress={reportOfPurchasesAPI}\r\n      />\r\n\r\n      <Pressable\r\n      style={styles.button}\r\n        onPress={closeTripAPI}>\r\n        <Text style={styles.textPressable}>Close Trip</Text>\r\n        </Pressable>\r\n\r\n      <Button\r\n        title=\"Open trip \"\r\n        onPress={openTripAPI}\r\n      />\r\n      <Text>{answerResponse}</Text>\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'fff',\r\n    justifyContent: 'center'\r\n  },\r\n  text: {\r\n    borderColor: \"blue\",\r\n    borderWidth: 3,\r\n    height: 40,\r\n    margin: 10\r\n  },\r\n  button:{\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n  },\r\n  textPressable:{\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  }\r\n});\r\n\r\n\r\nexport default Report;\r\n"]},"metadata":{},"sourceType":"module"}