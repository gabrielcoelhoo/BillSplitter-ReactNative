{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nvar Expense = function Expense(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      trip = _useState2[0],\n      setTrip = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      price = _useState6[0],\n      setPrice = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      username = _useState8[0],\n      setUsername = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      answerResponse = _useState10[0],\n      setAnswerResponse = _useState10[1];\n\n  function submitExpenses() {\n    console.log(trip, description, price, username);\n\n    mode: 'no-cors', fetch(\"http://localhost:8080/expenses?username=\" + username + \"&trip=\" + trip + \"&description=\" + description + \"&price=\" + price, {\n      method: 'POST',\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    }).then(function (responseJson) {\n      console.log(responseJson);\n\n      if (responseJson.status == 400) {\n        setAnswerResponse(\"you can not add more items to this trip\");\n      } else {\n        setAnswerResponse(\"item added successfully\");\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: StyleSheet.container\n  }, React.createElement(View, {\n    style: StyleSheet.textStyle\n  }, React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: setUsername,\n    placeholder: \"username\"\n  }), React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: function onChangeText(trip) {\n      return setTrip(trip);\n    },\n    defaultValue: trip,\n    placeholder: \"trip\"\n  }), React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: function onChangeText(description) {\n      return setDescription(description);\n    },\n    defaultValue: description,\n    placeholder: \"description\"\n  }), React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: function onChangeText(price) {\n      return setPrice(price);\n    },\n    keyboardType: \"number-pad\",\n    defaultValue: price,\n    placeholder: \"price\",\n    keyboardType: \"numeric\"\n  })), React.createElement(View, {\n    style: StyleSheet.buttonsStyle\n  }, React.createElement(Button, {\n    style: styles.button,\n    title: \"Submit\",\n    onPress: submitExpenses\n  }), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('Report');\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Report\")), React.createElement(Button, {\n    style: styles.button,\n    title: \"Go to Details\",\n    onPress: function onPress() {\n      return navigation.navigate('Stats');\n    }\n  })), React.createElement(Text, null, answerResponse));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'fff',\n    justifyContent: 'center'\n  },\n  text: {\n    borderColor: \"blue\",\n    borderWidth: 3,\n    height: 40,\n    margin: 10\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  }\n});\nexport default Expense;","map":{"version":3,"sources":["C:/Users/Gabriel/Desktop/splitBillApp/screens/Expense.js"],"names":["React","useState","PropTypes","NavigationContainer","createNativeStackNavigator","Expense","navigation","trip","setTrip","description","setDescription","price","setPrice","username","setUsername","answerResponse","setAnswerResponse","submitExpenses","console","log","mode","fetch","method","headers","token","then","responseJson","status","StyleSheet","container","textStyle","styles","text","buttonsStyle","button","navigate","create","flex","backgroundColor","justifyContent","borderColor","borderWidth","height","margin","alignItems","paddingVertical","paddingHorizontal","borderRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ScrollView, Text, View, StyleSheet, TextInput, Button, Alert, Pressable } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n\r\nconst Expense = ({ navigation }) => {\r\n\r\n  const [trip, setTrip] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [answerResponse, setAnswerResponse] = useState(\"\");\r\n\r\n  function submitExpenses() {\r\n    console.log(trip, description, price, username)\r\n    mode: 'no-cors',\r\n      fetch(`http://localhost:8080/expenses?username=${username}&trip=${trip}&description=${description}&price=${price}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n        //.then((response) => response.json())\r\n        .then(responseJson => {\r\n          console.log(responseJson);\r\n          if (responseJson.status == 400) {\r\n            setAnswerResponse(\"you can not add more items to this trip\")\r\n          }else{\r\n            setAnswerResponse(\"item added successfully\")\r\n          }\r\n        })\r\n  }\r\n//code to check numbers in the price field \r\n\r\n  //   function onChanged(text){\r\n  //     let newText = '';\r\n  //     let numbers = '0123456789';\r\n\r\n  //     for (var i=0; i < text.length; i++) {\r\n  //         if(numbers.indexOf(text[i]) > -1 ) {\r\n  //             newText = newText + text[i];\r\n  //         }\r\n  //         else {\r\n  //             // your call back function\r\n  //             alert(\"please enter numbers only\");\r\n  //         }\r\n  //     }\r\n  //     this.setState({ myNumber: newText });\r\n  // }\r\n\r\n  return (\r\n    <View style={StyleSheet.container}>\r\n<View style={StyleSheet.textStyle}>\r\n      <TextInput\r\n      style={styles.text}\r\n        onChangeText={setUsername}\r\n        placeholder=\"username\"\r\n\r\n      />\r\n\r\n      <TextInput\r\n      style={styles.text}\r\n        onChangeText={trip => setTrip(trip)}\r\n        defaultValue={trip}\r\n        placeholder=\"trip\"\r\n      />\r\n\r\n      <TextInput\r\n      style={styles.text}\r\n        onChangeText={description => setDescription(description)}\r\n        defaultValue={description}\r\n        placeholder=\"description\"\r\n      />\r\n\r\n      <TextInput \r\n      style={styles.text}\r\n        onChangeText={price => setPrice(price)}\r\n        keyboardType='number-pad'\r\n        defaultValue={price}\r\n        placeholder=\"price\"\r\n        keyboardType=\"numeric\"\r\n      />\r\n\r\n</View>\r\n<View  style={StyleSheet.buttonsStyle}>\r\n      <Button\r\n      style={styles.button}\r\n        title=\"Submit\"\r\n        onPress={submitExpenses}\r\n      />\r\n<Pressable\r\nstyle={styles.button}\r\n        onPress={() => navigation.navigate('Report')}>\r\n        <Text style={styles.text}>Report</Text>\r\n      </Pressable>\r\n\r\n<Button\r\nstyle={styles.button}\r\n        title=\"Go to Details\"\r\n        onPress={() => navigation.navigate('Stats')}\r\n      />\r\n</View>\r\n<Text>{answerResponse}</Text>\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'fff',\r\n    justifyContent: 'center'\r\n  },\r\n  text: {\r\n    borderColor: \"blue\",\r\n    borderWidth: 3,\r\n    height: 40,\r\n    margin: 10\r\n  },\r\n  button:{\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n  }\r\n});\r\n\r\nexport default Expense;\r\n"]},"metadata":{},"sourceType":"module"}