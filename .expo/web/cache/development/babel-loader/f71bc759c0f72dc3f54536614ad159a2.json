{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      answerResponse = _useState6[0],\n      setAnswerResponse = _useState6[1];\n\n  global.token = '';\n\n  function signupAPI() {\n    console.log(username, password);\n\n    mode: 'no-cors', fetch(\"http://localhost:8080/expenses/signup?username=\" + username + \"&password=\" + password, {\n      method: 'GET'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      console.log(responseJson.token);\n      token = responseJson.token;\n\n      if (token) {\n        navigation.navigate(\"Expense\");\n      } else {\n        setAnswerResponse(\"please provide a correct username and/ or password\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  return React.createElement(View, {\n    style: StyleSheet.container\n  }, React.createElement(Text, null, \"Login\"), React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: setUsername,\n    placeholder: \"username\"\n  }), React.createElement(TextInput, {\n    style: styles.text,\n    secureTextEntry: true,\n    onChangeText: setPassword,\n    placeholder: \"password\"\n  }), React.createElement(Button, {\n    title: \"Sign in\",\n    onPress: signupAPI\n  }), React.createElement(Text, null, answerResponse));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'fff',\n    justifyContent: 'center'\n  },\n  text: {\n    borderColor: \"blue\",\n    borderWidth: 3,\n    height: 40,\n    margin: 10\n  }\n});\nexport default Home;","map":{"version":3,"sources":["C:/Users/Gabriel/Desktop/splitBillApp/screens/Home.js"],"names":["React","useState","PropTypes","NavigationContainer","createNativeStackNavigator","Home","navigation","username","setUsername","password","setPassword","answerResponse","setAnswerResponse","global","token","signupAPI","console","log","mode","fetch","method","then","response","json","responseJson","navigate","catch","error","StyleSheet","container","styles","text","create","flex","backgroundColor","justifyContent","borderColor","borderWidth","height","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC/B,kBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCP,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4CT,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOU,cAAP;AAAA,MAAuBC,iBAAvB;;AAEAC,EAAAA,MAAM,CAACC,KAAP,GAAe,EAAf;;AAGA,WAASC,SAAT,GAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAAsBE,QAAtB;;AACAS,IAAAA,IAAI,EAAE,WACJC,KAAK,qDAAmDZ,QAAnD,kBAAwEE,QAAxE,EAAoF;AACvFW,MAAAA,MAAM,EAAE;AAD+E,KAApF,CAAL,CAIGC,IAJH,CAIQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAJR,EAKGF,IALH,CAKQ,UAACG,YAAD,EAAkB;AACtBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYO,YAAY,CAACV,KAAzB;AACAA,MAAAA,KAAK,GAAGU,YAAY,CAACV,KAArB;;AACA,UAAIA,KAAJ,EAAW;AACTR,QAAAA,UAAU,CAACmB,QAAX,CAAoB,SAApB;AACD,OAFD,MAEO;AACLb,QAAAA,iBAAiB,CAAC,oDAAD,CAAjB;AACD;AACF,KAdH,EAeGc,KAfH,CAeS,UAACC,KAAD,EAAW;AAChBX,MAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACD,KAjBH,CADI;AAmBP;;AAID,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,UAAU,CAACC;AAAxB,KAEE,oBAAC,IAAD,gBAFF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,IADhB;AAEE,IAAA,YAAY,EAAEvB,WAFhB;AAGE,IAAA,WAAW,EAAC;AAHd,IAHF,EAUE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEsB,MAAM,CAACC,IADhB;AAGE,IAAA,eAAe,EAAE,IAHnB;AAIE,IAAA,YAAY,EAAErB,WAJhB;AAKE,IAAA,WAAW,EAAC;AALd,IAVF,EAkBE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEK;AAFX,IAlBF,EAsBI,oBAAC,IAAD,QAAOJ,cAAP,CAtBJ,CADF;AA2BD,CA5DD;;AA+DA,IAAMmB,MAAM,GAAGF,UAAU,CAACI,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,KAFR;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,WAAW,EAAE,MADT;AAEJC,IAAAA,WAAW,EAAE,CAFT;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAIJC,IAAAA,MAAM,EAAE;AAJJ;AANyB,CAAlB,CAAf;AAcA,eAAelC,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ScrollView, Text, View, TextInput, Button, Alert, StyleSheet, TouchableHighlight } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nconst Home = ({ navigation }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [answerResponse, setAnswerResponse] = useState(\"\");\r\n\r\n  global.token = '';\r\n\r\n  //need to handle the error answer\r\n  function signupAPI() {\r\n    console.log(username, password)\r\n    mode: 'no-cors',\r\n      fetch(`http://localhost:8080/expenses/signup?username=${username}&password=${password}`, {\r\n        method: 'GET',\r\n        \r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n          console.log(responseJson);\r\n          console.log(responseJson.token);\r\n          token = responseJson.token;\r\n          if (token) {\r\n            navigation.navigate(\"Expense\");\r\n          } else {\r\n            setAnswerResponse(\"please provide a correct username and/ or password\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <View style={StyleSheet.container}>\r\n\r\n      <Text>Login</Text>\r\n      <TextInput\r\n        style={styles.text}\r\n        onChangeText={setUsername}\r\n        placeholder=\"username\"\r\n\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.text}\r\n        //added the line below to hide caracheteres\r\n        secureTextEntry={true}\r\n        onChangeText={setPassword}\r\n        placeholder=\"password\"\r\n      />\r\n\r\n      <Button\r\n        title=\"Sign in\"\r\n        onPress={signupAPI} />\r\n\r\n        <Text>{answerResponse}</Text>\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'fff',\r\n    justifyContent: 'center'\r\n  },\r\n  text: {\r\n    borderColor: \"blue\",\r\n    borderWidth: 3,\r\n    height: 40,\r\n    margin: 10\r\n  }\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}