{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nvar StatsScreen = function StatsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      statusOfTrip = _useState2[0],\n      setstatusOfTrip = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tripName = _useState4[0],\n      setTripName = _useState4[1];\n\n  function statusOfTripAPI() {\n    mode: 'no-cors', fetch(\"http://localhost:8080/expenses/statusOfTrip?trip=\" + tripName, {\n      method: 'GET',\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      setstatusOfTrip(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  return React.createElement(View, null, React.createElement(View, null, statusOfTrip.map(function (index, status) {\n    return React.createElement(Text, {\n      key: status\n    }, index);\n  })), React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: setTripName,\n    placeholder: \"Trip Name\"\n  }), React.createElement(Button, {\n    title: \"status Of Trip\",\n    onPress: statusOfTripAPI\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'fff',\n    justifyContent: 'center'\n  },\n  text: {\n    marginTop: 20,\n    borderColor: \"blue\",\n    borderWidth: 3,\n    height: 40,\n    margin: 10\n  }\n});\nexport default Stats;","map":{"version":3,"sources":["C:/Users/Gabriel/Desktop/splitBillApp/screens/Stats.js"],"names":["React","useState","NavigationContainer","createNativeStackNavigator","StatsScreen","navigation","statusOfTrip","setstatusOfTrip","tripName","setTripName","statusOfTripAPI","mode","fetch","method","headers","token","then","response","json","responseJson","console","log","catch","error","map","index","status","styles","text","StyleSheet","create","container","flex","backgroundColor","justifyContent","marginTop","borderColor","borderWidth","height","margin","Stats"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACtC,kBAAwCJ,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOK,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AAKA,WAASC,eAAT,GAA2B;AACzBC,IAAAA,IAAI,EAAE,WACNC,KAAK,uDAAqDJ,QAArD,EAAiE;AACpEK,MAAAA,MAAM,EAAE,KAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACP,qCAA2BC;AADpB;AAF2D,KAAjE,CAAL,CAMGC,IANH,CAMQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KANR,EAOGF,IAPH,CAOQ,UAACG,YAAD,EAAkB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAZ,MAAAA,eAAe,CAACY,YAAD,CAAf;AAED,KAXH,EAYGG,KAZH,CAYS,UAACC,KAAD,EAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,KAdH,CADM;AAgBP;;AAKD,SACE,oBAAC,IAAD,QAEE,oBAAC,IAAD,QACGjB,YAAY,CAACkB,GAAb,CAAiB,UAACC,KAAD,EAAQC,MAAR;AAAA,WAAmB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA;AAAX,OAAoBD,KAApB,CAAnB;AAAA,GAAjB,CADH,CAFF,EAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEE,MAAM,CAACC,IADhB;AAEE,IAAA,YAAY,EAAEnB,WAFhB;AAGE,IAAA,WAAW,EAAC;AAHd,IANF,EAYE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,OAAO,EAAEC;AAFX,IAZF,CADF;AAsBD,CAnDD;;AAqDA,IAAMiB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,KAFR;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BN,EAAAA,IAAI,EAAE;AACJO,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,WAAW,EAAE,MAFT;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,MAAM,EAAE,EAJJ;AAKJC,IAAAA,MAAM,EAAE;AALJ;AANyB,CAAlB,CAAf;AAeA,eAAeC,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { ScrollView, Text, StyleSheet, View, TextInput, Button, Alert } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nconst StatsScreen = ({ navigation }) => {\r\n  const [statusOfTrip, setstatusOfTrip] = useState([]);\r\n  const [tripName, setTripName] = useState(\"\");\r\n\r\n\r\n//send the name of trip to check in the back end\r\n\r\n  function statusOfTripAPI() {\r\n    mode: 'no-cors',\r\n    fetch(`http://localhost:8080/expenses/statusOfTrip?trip=${tripName}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n        setstatusOfTrip(responseJson);\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View>\r\n\r\n      <View>\r\n        {statusOfTrip.map((index, status) => <Text key={status}>{index}</Text>)}\r\n      </View>\r\n\r\n      <TextInput\r\n        style={styles.text}\r\n        onChangeText={setTripName}\r\n        placeholder=\"Trip Name\"\r\n      />\r\n\r\n      <Button\r\n        title=\"status Of Trip\"\r\n        onPress={statusOfTripAPI}\r\n      />\r\n\r\n\r\n    </View>\r\n  );\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'fff',\r\n    justifyContent: 'center',\r\n  },\r\n  text: {\r\n    marginTop: 20,\r\n    borderColor: \"blue\",\r\n    borderWidth: 3,\r\n    height: 40,\r\n    margin: 10\r\n  }\r\n});\r\n\r\nexport default Stats;\r\n"]},"metadata":{},"sourceType":"module"}